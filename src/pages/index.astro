---
import jwt from "jsonwebtoken";
const userId = Astro.url.searchParams.get("id");
const zendeskAppId = import.meta.env.PUBLIC_ZENDESK_APP_ID;
const zendeskSecret = import.meta.env.PUBLIC_ZENDESK_SECRET;
const zendeskUrl = import.meta.env.PUBLIC_ZENDESK_URL;
const header = {
  alg: "HS256",
  typ: "JWT",
  kid: zendeskAppId,
};
const userEmail = `auth-${userId}@christianzoppi.com`;
const jwtToken = jwt.sign({ scope: "user", external_id: userEmail, email: userEmail, name: `Christian Zoppi ${userId}` }, zendeskSecret, { header });
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Zendesk Implementation Test</title>
	</head>
	<body>
		<script id="ze-snippet" src={zendeskUrl} is:inline></script>
		<script is:inline define:vars={{ jwtToken, userEmail }}>
		  window.zE("messenger", "loginUser", function (callback) {
			console.log(jwtToken, userEmail);
			callback(jwtToken);
		  });
		</script>
	</body>
</html>